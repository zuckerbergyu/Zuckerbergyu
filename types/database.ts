/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  "/": {
    get: {
      responses: {
        /** OK */
        200: unknown;
      };
    };
  };
  "/Skills": {
    get: {
      parameters: {
        query: {
          logo?: parameters["rowFilter.Skills.logo"];
          name?: parameters["rowFilter.Skills.name"];
          description?: parameters["rowFilter.Skills.description"];
          favorite?: parameters["rowFilter.Skills.favorite"];
          id?: parameters["rowFilter.Skills.id"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["Skills"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** Skills */
          Skills?: definitions["Skills"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          logo?: parameters["rowFilter.Skills.logo"];
          name?: parameters["rowFilter.Skills.name"];
          description?: parameters["rowFilter.Skills.description"];
          favorite?: parameters["rowFilter.Skills.favorite"];
          id?: parameters["rowFilter.Skills.id"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          logo?: parameters["rowFilter.Skills.logo"];
          name?: parameters["rowFilter.Skills.name"];
          description?: parameters["rowFilter.Skills.description"];
          favorite?: parameters["rowFilter.Skills.favorite"];
          id?: parameters["rowFilter.Skills.id"];
        };
        body: {
          /** Skills */
          Skills?: definitions["Skills"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/Github": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.Github.id"];
          link?: parameters["rowFilter.Github.link"];
          thumbNail?: parameters["rowFilter.Github.thumbNail"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["Github"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** Github */
          Github?: definitions["Github"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters["rowFilter.Github.id"];
          link?: parameters["rowFilter.Github.link"];
          thumbNail?: parameters["rowFilter.Github.thumbNail"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters["rowFilter.Github.id"];
          link?: parameters["rowFilter.Github.link"];
          thumbNail?: parameters["rowFilter.Github.thumbNail"];
        };
        body: {
          /** Github */
          Github?: definitions["Github"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/Interview": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.Interview.id"];
          title?: parameters["rowFilter.Interview.title"];
          description?: parameters["rowFilter.Interview.description"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["Interview"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** Interview */
          Interview?: definitions["Interview"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters["rowFilter.Interview.id"];
          title?: parameters["rowFilter.Interview.title"];
          description?: parameters["rowFilter.Interview.description"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters["rowFilter.Interview.id"];
          title?: parameters["rowFilter.Interview.title"];
          description?: parameters["rowFilter.Interview.description"];
        };
        body: {
          /** Interview */
          Interview?: definitions["Interview"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/Career": {
    get: {
      parameters: {
        query: {
          company?: parameters["rowFilter.Career.company"];
          title?: parameters["rowFilter.Career.title"];
          period?: parameters["rowFilter.Career.period"];
          description?: parameters["rowFilter.Career.description"];
          link?: parameters["rowFilter.Career.link"];
          id?: parameters["rowFilter.Career.id"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["Career"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** Career */
          Career?: definitions["Career"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          company?: parameters["rowFilter.Career.company"];
          title?: parameters["rowFilter.Career.title"];
          period?: parameters["rowFilter.Career.period"];
          description?: parameters["rowFilter.Career.description"];
          link?: parameters["rowFilter.Career.link"];
          id?: parameters["rowFilter.Career.id"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          company?: parameters["rowFilter.Career.company"];
          title?: parameters["rowFilter.Career.title"];
          period?: parameters["rowFilter.Career.period"];
          description?: parameters["rowFilter.Career.description"];
          link?: parameters["rowFilter.Career.link"];
          id?: parameters["rowFilter.Career.id"];
        };
        body: {
          /** Career */
          Career?: definitions["Career"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/AboutMe": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.AboutMe.id"];
          title?: parameters["rowFilter.AboutMe.title"];
          contents?: parameters["rowFilter.AboutMe.contents"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["AboutMe"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** AboutMe */
          AboutMe?: definitions["AboutMe"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters["rowFilter.AboutMe.id"];
          title?: parameters["rowFilter.AboutMe.title"];
          contents?: parameters["rowFilter.AboutMe.contents"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters["rowFilter.AboutMe.id"];
          title?: parameters["rowFilter.AboutMe.title"];
          contents?: parameters["rowFilter.AboutMe.contents"];
        };
        body: {
          /** AboutMe */
          AboutMe?: definitions["AboutMe"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
  "/Education": {
    get: {
      parameters: {
        query: {
          id?: parameters["rowFilter.Education.id"];
          school?: parameters["rowFilter.Education.school"];
          class?: parameters["rowFilter.Education.class"];
          period?: parameters["rowFilter.Education.period"];
          period_?: parameters["rowFilter.Education.period_"];
          /** Filtering Columns */
          select?: parameters["select"];
          /** Ordering */
          order?: parameters["order"];
          /** Limiting and Pagination */
          offset?: parameters["offset"];
          /** Limiting and Pagination */
          limit?: parameters["limit"];
        };
        header: {
          /** Limiting and Pagination */
          Range?: parameters["range"];
          /** Limiting and Pagination */
          "Range-Unit"?: parameters["rangeUnit"];
          /** Preference */
          Prefer?: parameters["preferCount"];
        };
      };
      responses: {
        /** OK */
        200: {
          schema: definitions["Education"][];
        };
        /** Partial Content */
        206: unknown;
      };
    };
    post: {
      parameters: {
        body: {
          /** Education */
          Education?: definitions["Education"];
        };
        query: {
          /** Filtering Columns */
          select?: parameters["select"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** Created */
        201: unknown;
      };
    };
    delete: {
      parameters: {
        query: {
          id?: parameters["rowFilter.Education.id"];
          school?: parameters["rowFilter.Education.school"];
          class?: parameters["rowFilter.Education.class"];
          period?: parameters["rowFilter.Education.period"];
          period_?: parameters["rowFilter.Education.period_"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
    patch: {
      parameters: {
        query: {
          id?: parameters["rowFilter.Education.id"];
          school?: parameters["rowFilter.Education.school"];
          class?: parameters["rowFilter.Education.class"];
          period?: parameters["rowFilter.Education.period"];
          period_?: parameters["rowFilter.Education.period_"];
        };
        body: {
          /** Education */
          Education?: definitions["Education"];
        };
        header: {
          /** Preference */
          Prefer?: parameters["preferReturn"];
        };
      };
      responses: {
        /** No Content */
        204: never;
      };
    };
  };
}

export interface definitions {
  Skills: {
    /** Format: text */
    logo: string;
    /**
     * Format: text
     * @description Note:
     * This is a Primary Key.<pk/>
     */
    name: string;
    /** Format: text */
    description?: string;
    /** Format: boolean */
    favorite?: boolean;
    /** Format: integer */
    id?: number;
  };
  Github: {
    /**
     * Format: bigint
     * @description Note:
     * This is a Primary Key.<pk/>
     */
    id: number;
    /**
     * Format: text
     * @default
     */
    link?: string;
    /**
     * Format: text
     * @default
     */
    thumbNail?: string;
  };
  Interview: {
    /**
     * Format: bigint
     * @description Note:
     * This is a Primary Key.<pk/>
     */
    id: number;
    /**
     * Format: text
     * @default
     */
    title?: string;
    /**
     * Format: text
     * @default
     */
    description?: string;
  };
  Career: {
    /**
     * Format: text
     * @default
     */
    company: string;
    /** Format: text */
    title?: string;
    /** Format: text */
    period: string;
    /** Format: text */
    description?: string;
    /** Format: json */
    link?: unknown;
    /**
     * Format: integer
     * @description Note:
     * This is a Primary Key.<pk/>
     * @default 0
     */
    id: number;
  };
  AboutMe: {
    /**
     * Format: bigint
     * @description Note:
     * This is a Primary Key.<pk/>
     */
    id: number;
    /**
     * Format: text
     * @default
     */
    title?: string;
    /**
     * Format: text
     * @default
     */
    contents: string;
  };
  Education: {
    /**
     * Format: bigint
     * @description Note:
     * This is a Primary Key.<pk/>
     */
    id: number;
    /**
     * Format: text
     * @default
     */
    school?: string;
    /**
     * Format: text
     * @default
     */
    class?: string;
    /**
     * Format: text
     * @default
     */
    period?: string;
    /**
     * Format: text
     * @default
     */
    period_?: string;
  };
}

export interface parameters {
  /**
   * @description Preference
   * @enum {string}
   */
  preferParams: "params=single-object";
  /**
   * @description Preference
   * @enum {string}
   */
  preferReturn: "return=representation" | "return=minimal" | "return=none";
  /**
   * @description Preference
   * @enum {string}
   */
  preferCount: "count=none";
  /** @description Filtering Columns */
  select: string;
  /** @description On Conflict */
  on_conflict: string;
  /** @description Ordering */
  order: string;
  /** @description Limiting and Pagination */
  range: string;
  /**
   * @description Limiting and Pagination
   * @default items
   */
  rangeUnit: string;
  /** @description Limiting and Pagination */
  offset: string;
  /** @description Limiting and Pagination */
  limit: string;
  /** @description Skills */
  "body.Skills": definitions["Skills"];
  /** Format: text */
  "rowFilter.Skills.logo": string;
  /** Format: text */
  "rowFilter.Skills.name": string;
  /** Format: text */
  "rowFilter.Skills.description": string;
  /** Format: boolean */
  "rowFilter.Skills.favorite": string;
  /** Format: integer */
  "rowFilter.Skills.id": string;
  /** @description Github */
  "body.Github": definitions["Github"];
  /** Format: bigint */
  "rowFilter.Github.id": string;
  /** Format: text */
  "rowFilter.Github.link": string;
  /** Format: text */
  "rowFilter.Github.thumbNail": string;
  /** @description Interview */
  "body.Interview": definitions["Interview"];
  /** Format: bigint */
  "rowFilter.Interview.id": string;
  /** Format: text */
  "rowFilter.Interview.title": string;
  /** Format: text */
  "rowFilter.Interview.description": string;
  /** @description Career */
  "body.Career": definitions["Career"];
  /** Format: text */
  "rowFilter.Career.company": string;
  /** Format: text */
  "rowFilter.Career.title": string;
  /** Format: text */
  "rowFilter.Career.period": string;
  /** Format: text */
  "rowFilter.Career.description": string;
  /** Format: json */
  "rowFilter.Career.link": string;
  /** Format: integer */
  "rowFilter.Career.id": string;
  /** @description AboutMe */
  "body.AboutMe": definitions["AboutMe"];
  /** Format: bigint */
  "rowFilter.AboutMe.id": string;
  /** Format: text */
  "rowFilter.AboutMe.title": string;
  /** Format: text */
  "rowFilter.AboutMe.contents": string;
  /** @description Education */
  "body.Education": definitions["Education"];
  /** Format: bigint */
  "rowFilter.Education.id": string;
  /** Format: text */
  "rowFilter.Education.school": string;
  /** Format: text */
  "rowFilter.Education.class": string;
  /** Format: text */
  "rowFilter.Education.period": string;
  /** Format: text */
  "rowFilter.Education.period_": string;
}

export interface operations {}

export interface external {}
